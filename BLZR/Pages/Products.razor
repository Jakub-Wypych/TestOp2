@page "/products"
@using ProductApp
@using ProductApp.Models
@inject ProductService ProductService

<h3>Product List</h3>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Date</th>
            <th>Price</th>
            <th>Category</th>
            <th>Stock (Quantity)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in ProductService.GetProducts())
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Date.ToString("MM-dd-yyyy")</td>
                <td>@product.Price.ToString("C")</td>
                <td>@product.Category</td>
                <td>@product.Quantity</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => NavigateToEdit(product.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteProduct(product)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void NavigateToEdit(int productId)
    {
        NavigationManager.NavigateTo($"/edit-product/{productId}");
    }

    private void DeleteProduct(Product product)
    {
        ProductService.DeleteProduct(product.Id);
        StateHasChanged();
    }

    private void UpdatePrice(Product product, string? value)
    {
        if (string.IsNullOrWhiteSpace(value))
        {
            product.Price = 0; // Lub jakakolwiek inna wartość domyślna, np. `null` jeśli Price jest typu nullable.
        }
        else if (decimal.TryParse(value, out var parsedValue))
        {
            product.Price = parsedValue;
        }
    }
}